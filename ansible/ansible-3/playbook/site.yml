---
- name: Install Clickhouse
  hosts: clickhouse
  handlers:
    - name: Start clickhouse service
      become: true
      ansible.builtin.service:
        name: clickhouse-server
        state: restarted
  tasks:
    - block:
        - name: Get clickhouse distrib 1
          ansible.builtin.get_url:
            url: "https://packages.clickhouse.com/deb/pool/main/c/{{ item }}/{{ item }}_{{ clickhouse_version }}_all.deb"
            dest: "./{{ item }}-{{ clickhouse_version }}.deb"
            mode: "0777"
          with_items: "{{ clickhouse_packages }}"
      rescue:
        - name: Get clickhouse distrib 2
          ansible.builtin.get_url:
            url: "https://packages.clickhouse.com/deb/pool/main/c/clickhouse-common-static/clickhouse-common-static_{{ clickhouse_version }}_amd64.deb"
            dest: "./clickhouse-common-static-{{ clickhouse_version }}.deb"
            mode: "0777"
    - name: Install clickhouse packages
      become: true
      become_method: sudo
      ansible.builtin.apt:
        update_cache: yes
        deb: "./{{ item.1 }}"
      with_indexed_items:
      - clickhouse-client-{{ clickhouse_version }}.deb
      - clickhouse-server-{{ clickhouse_version }}.deb
      - clickhouse-common-static-{{ clickhouse_version }}.deb
      notify: Start clickhouse service
    - name: Modify Clickhouse config.xml
      become: true
      ansible.builtin.replace:
        backup: true
        path: "/etc/clickhouse-server/config.xml"
        regexp: '^    <!-- <listen_host>0.0.0.0</listen_host> -->$'
        replace: '    <listen_host>0.0.0.0</listen_host>'
      notify: Start clickhouse service

    - name: Flush handlers
      meta: flush_handlers

    - name: timeout 20 sec
      ansible.builtin.pause:
        seconds: 20

    - name: Create database
      shell: clickhouse-client --host clickhouse-01 --port 9000 -q 'create database logs;'
      become: true
      register: create_db
      failed_when: create_db.rc != 0 and create_db.rc != 82
      changed_when: create_db.rc == 0

- name: Install vector
  hosts: vector

  handlers:
    - name: Start vector service
      become: true
      ansible.builtin.service:
        name: vector
        state: restarted

  tasks:
    - name: Get vector distrib
      ansible.builtin.get_url:
        url: "https://packages.timber.io/vector/{{ vector_version }}/vector_{{ vector_version }}-1_amd64.deb"
        dest: "./vector-{{ vector_version }}.deb"
        mode: "0777"
      notify: Start vector service

    - name: Install vector packages
      become: true
      become_method: sudo
      ansible.builtin.apt:
        update_cache: yes
        deb: "./{{ item.1 }}"
      with_indexed_items:
      - vector-{{ vector_version }}.deb

    - name: Flush handlers to restart vector
      meta: flush_handlers

    - name: Configure Vector | ensure what directory exists
      ansible.builtin.file:
        path: "{{ vector_config_dir }}"
        state: directory
        mode: "0777"

    - name: Configure Vector | Template config
      ansible.builtin.template:
        src: "template/vector/vector_conf.j2"
        dest: "{{ vector_config_dir }}/vector.yml"
        mode: "0777"

- name: Install Lighthouse
  hosts: lighthouse
  gather_facts: false
  remote_user: user
  tags: lighthouse

  handlers:
    - name: Start Lighthouse service
      become: true
      ansible.builtin.systemd:
        daemon_reload: true
        enabled: false
        name: nginx.service
        state: restarted

  tasks:
    - name: Install, configure, and start Lighthouse
      block:
        - name: Pre-install Nginx & Git client
          become: true
          ansible.builtin.apt:
            name: "{{ lighthouse_packages }}"
            update_cache: true

        - name: Clone Lighthouse source code by Git
          become: true
          ansible.builtin.git:
            repo: "{{ lighthouse_code_src }}"
            version: "{{ lighthouse_code_src_version }}"
            dest: "{{ lighthouse_data_dir }}"

        - name: Prepare nginx config
          become: true
          ansible.builtin.template:
            src: "template/nginx/lighthouse.conf.j2"
            dest: "/etc/nginx/conf.d/{{ lighthouse_nginx_conf }}"
            mode: "0777"
            owner: root
            group: root
          notify: Start Lighthouse service
